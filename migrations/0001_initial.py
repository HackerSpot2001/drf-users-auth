# Generated by Django 5.2.3 on 2025-06-28 09:55

import DRF_Users.helpers
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CountryMaster',
            fields=[
                ('country_id', models.CharField(default=DRF_Users.helpers.generate_id, editable=False, max_length=255, primary_key=True, serialize=False)),
                ('country_name', models.CharField(max_length=200, unique=True)),
                ('country_shortcode', models.CharField(max_length=200, null=True)),
                ('country_numeric_code', models.CharField(max_length=200, null=True)),
                ('country_phonecode', models.CharField(max_length=200, null=True)),
                ('country_currency', models.CharField(max_length=200, null=True)),
                ('country_currencyname', models.CharField(max_length=200, null=True)),
                ('country_latitude', models.CharField(max_length=200, null=True)),
                ('country_longitude', models.CharField(max_length=200, null=True)),
                ('last_updated_at', models.FloatField(default=DRF_Users.helpers.get_current_epoch, editable=False)),
                ('created_at', models.FloatField(default=DRF_Users.helpers.get_current_epoch, editable=False)),
            ],
            options={
                'verbose_name_plural': 'CountryMaster',
                'db_table': 'country_master',
                'ordering': ['country_name'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserMaster',
            fields=[
                ('user_id', models.CharField(default=DRF_Users.helpers.generate_id, editable=False, max_length=255, primary_key=True, serialize=False)),
                ('initials', models.CharField(blank=True, max_length=10, null=True)),
                ('salutation', models.CharField(blank=True, choices=[('MR', 'Mr'), ('MRS', 'Mrs')], max_length=10, null=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('user_bio', models.TextField(blank=True, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('OTHERS', 'Others')], max_length=20, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('SINGLE', 'Single'), ('MARRIED', 'Married'), ('DIVORCED', 'Divorced')], max_length=20, null=True)),
                ('marrige_date', models.DateField(blank=True, null=True)),
                ('user_profile_pic', models.CharField(blank=True, max_length=255, null=True)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_contact_no', models.CharField(blank=True, max_length=12, null=True)),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], null=True)),
                ('nationality', models.CharField(blank=True, null=True)),
                ('last_updated_at', models.FloatField(default=DRF_Users.helpers.get_current_epoch, editable=False)),
                ('created_at', models.FloatField(default=DRF_Users.helpers.get_current_epoch, editable=False)),
            ],
            options={
                'verbose_name_plural': 'UserMaster',
                'db_table': 'user_master',
                'ordering': ['-last_updated_at'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StateMaster',
            fields=[
                ('state_id', models.CharField(default=DRF_Users.helpers.generate_id, editable=False, max_length=255, primary_key=True, serialize=False)),
                ('state_name', models.CharField(max_length=200)),
                ('state_shortcode', models.CharField(max_length=200, null=True)),
                ('state_latitude', models.CharField(max_length=200, null=True)),
                ('state_longitude', models.CharField(max_length=200, null=True)),
                ('last_updated_at', models.FloatField(default=DRF_Users.helpers.get_current_epoch, editable=False)),
                ('created_at', models.FloatField(default=DRF_Users.helpers.get_current_epoch, editable=False)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='country', to='DRF_Users.countrymaster')),
            ],
            options={
                'verbose_name_plural': 'StateMaster',
                'db_table': 'state_master',
                'ordering': ['state_name'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CityMaster',
            fields=[
                ('city_id', models.CharField(default=DRF_Users.helpers.generate_id, editable=False, max_length=255, primary_key=True, serialize=False)),
                ('city_name', models.CharField(max_length=200)),
                ('city_latitude', models.CharField(max_length=200, null=True)),
                ('city_longitude', models.CharField(max_length=200, null=True)),
                ('last_updated_at', models.FloatField(default=DRF_Users.helpers.get_current_epoch, editable=False)),
                ('created_at', models.FloatField(default=DRF_Users.helpers.get_current_epoch, editable=False)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='state', to='DRF_Users.statemaster')),
            ],
            options={
                'verbose_name_plural': 'CityMaster',
                'db_table': 'city_master',
                'ordering': ['city_name'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ContactMaster',
            fields=[
                ('contact_master_id', models.CharField(default=DRF_Users.helpers.generate_id, editable=False, max_length=255, primary_key=True, serialize=False)),
                ('phone_no', models.CharField(blank=True, db_index=True, max_length=15, null=True, unique=True)),
                ('whatsapp_no', models.CharField(blank=True, db_index=True, max_length=15, null=True, unique=True)),
                ('email', models.EmailField(blank=True, db_index=True, max_length=255, null=True, unique=True)),
                ('address_line1', models.CharField(blank=True, max_length=255, null=True)),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('pincode', models.CharField(blank=True, max_length=20, null=True)),
                ('last_updated_at', models.FloatField(default=DRF_Users.helpers.get_current_epoch, editable=False)),
                ('created_at', models.FloatField(default=DRF_Users.helpers.get_current_epoch, editable=False)),
                ('cm_city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cm_city', to='DRF_Users.citymaster')),
                ('cm_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cm_country', to='DRF_Users.countrymaster')),
                ('cm_state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cm_state', to='DRF_Users.statemaster')),
                ('cm_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cm_user', to='DRF_Users.usermaster')),
            ],
            options={
                'verbose_name_plural': 'ContactMaster',
                'db_table': 'contact_master',
                'ordering': ['-last_updated_at'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BankDetails',
            fields=[
                ('bank_id', models.CharField(default=DRF_Users.helpers.generate_id, editable=False, max_length=255, primary_key=True, serialize=False)),
                ('bank_name', models.CharField(blank=True, max_length=50, null=True)),
                ('bank_account_no', models.CharField(blank=True, max_length=20, null=True)),
                ('bank_ifsc_code', models.CharField(blank=True, max_length=20, null=True)),
                ('bank_passbook', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_statement', models.CharField(blank=True, max_length=255, null=True)),
                ('last_updated_at', models.FloatField(default=DRF_Users.helpers.get_current_epoch, editable=False)),
                ('created_at', models.FloatField(default=DRF_Users.helpers.get_current_epoch, editable=False)),
                ('bd_bank_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bd_bank_user', to='DRF_Users.usermaster')),
            ],
            options={
                'verbose_name_plural': 'BankDetails',
                'db_table': 'bank_details',
                'ordering': ['-last_updated_at'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserLogin',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_login_id', models.CharField(default=DRF_Users.helpers.generate_id, editable=False, max_length=255, primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=255)),
                ('last_updated_at', models.FloatField(default=DRF_Users.helpers.get_current_epoch, editable=False)),
                ('created_at', models.FloatField(default=DRF_Users.helpers.get_current_epoch, editable=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('ul_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ul_user', to='DRF_Users.usermaster')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'UserLogin',
                'db_table': 'user_login',
                'ordering': ['-last_updated_at'],
                'managed': True,
            },
        ),
    ]
